{
  "hash": "1b00355c895ac320d22320831dd1cd8e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lesson 2 - RStudio Workshop\"\nnumber-sections: true\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.callout-caution title=\"Learning Goals\"}\n1.  Getting more familiar with RStudio\n2.  Learn about a reproducible workflow in RStudio\n3.  Work on Homework 1 with your group. The goals of the homework are:\n    a.  Explore tidy data\n    b.  Get familiar with RStudio\n    c. Use Quarto to communicate reproducible document\n:::\n\n::: {.callout-note title=\"Additional Resources\"}\nFor more information about the topics covered in this chapter, refer to the resources below:\n\n-   [Setting up for success in COMP/STAT 112 (YouTube)](https://www.youtube.com/watch?v=0vmY6aDWmgU&list=PLyEH7o09I467e8zck95awweg_bGuLzqjz&index=2) by Lisa Lendway[^02-rstudio-workshop-1]\n-   [Quarto Cheatsheet (pdf)](https://rstudio.github.io/cheatsheets/quarto.pdf)\n-   [Quarto Get Started Guide (html)](https://quarto.org/docs/get-started/hello/rstudio.html)\n:::\n\n[^02-rstudio-workshop-1]: Lisa Lendway is a Mac alum, former Mac prof who helped shape this course, and R/RStudio whiz.\n\n## Warm-up\n\n### Background {.unnumbered}\n\n#### What's the point of this course? {.unnumbered}\n\nBuild knowledge from data within a particular domain of inquiry, and particular contexts.\n\n#### Why will we use R/RStudio as a tool in this course? {.unnumbered}\n\n-   It's open access, ie, free!\n-   It's open source, ie, anyone can contribute to its development\n-   It's used broadly--here are some examples where R is used:\n    -   [Logan Pratico](https://www.youtube.com/watch?v=k6hD-Fagboc&list=PL9HYL-VRX0oRFZslRGHwHuwea7SvAATHp&index=8): making \"eviction data accessible to the legal aid community\"\n    -   [Ahmadou Dicko](https://www.rstudio.com/resources/rstudioglobal-2021/humanitarian-data-science-with-r/): humanitarians creating \"life saving data products\"\n    -   [Shelmith Kariuki](https://www.rstudio.com/resources/rstudioglobal-2021/rkenyacensus-package/): Kenyan government census\n    -   [Laura DeCicco](https://www.youtube.com/watch?v=w4roQNlPAkU&list=PL9HYL-VRX0oRFZslRGHwHuwea7SvAATHp&index=25): U.S. Geological Survey (USGS) discovery and retrieval of hydrologic data\n    -   [Nick Snellgrove & Uli Muellner](https://www.youtube.com/watch?v=iFXslnnxqYk&list=PL9HYL-VRX0oRFZslRGHwHuwea7SvAATHp&index=9): studying aquatic invasive species in MN\n\n#### RStudio Layout {.unnumbered}\n\nBelow is a screenshot of the default layout for RStudio.\n\n#### Console {.unnumbered}\n\nLast class, we spent most of our time in the console. However,\n\n| Console is good for... | Console is bad for most everything else, including... |\n|:-----------------------|:----------------------------------------------|\n| quick calculations     | documenting our work                                  |\n| trying out code        | editing our work                                      |\n| pulling up help files  | communicating our work                                |\n|                        | being able to *reproduce* our work                    |\n\n### Quarto {.unnumbered}\n\n#### Reproducibility with Quarto {.unnumbered}\n\nIt's important to document and communicate every step in the data analysis process, e.g. data collection, cleaning, and analysis, so that others and ourselves can *reproduce* and hence *verify* and *build upon* our work.\n\nRStudio includes tools for creating reproducible and lovely documents, webpages, books (like this online manual!), etc that allow us to interleave text, code, output, images, tables, etc. Quarto is integrated into RStudio and if you've used R Markdown, it looks very similar.\n\n::: {.callout-note title=\"Quarto\"}\nQuarto is an technology that incorporates code from many programming languages such as R along with styled text (headers, bold, italics, links, etc.) using markdown.\n:::\n\n#### Quarto Example {.unnumbered}\n\nDownload then move [this Quarto document](../student_notes/quarto-demo.qmd) into the activities folder of your portfolio project and do not forgot to include it in `_quarto.yml` file. Open the Quarto document in RStudio and follow the prompts therein. Note that this document explores the basics. We'll pick up more details as we go, often by making and learning from mistakes. The Quarto cheatsheets linked at the top of this chapter presents more features of Quarto.\n\n### Important Tips {.unnumbered}\n\n#### Quarto Files (.qmd) vs Console {.unnumbered}\n\n-   The console does *not* communicate with Quarto. Things you define or type in the console are NOT defined, stored, or run in the .qmd.\n\n-   Quarto *can* communicate with the console, but only if you tell it to.\n\n    -   IT WILL: if you run a chunk inside your .qmd (by clicking the green arrow), it is also run and stored in the console.\n    -   IT WON'T: if you render your .qmd to html but do not also run the chunks inside the .qmd, the results will be displayed in the html but *not* run or stored in the console.\n\n#### Comments {.unnumbered}\n\nLeaving short notes (known as comments) about what our code is doing is an important aspect of communication. It reminds our future selves, and communicates to others, what our thought and code process was. Hence comments are important to reproducibility. In the R chunks, comments are proceeded by a pound sign: `# This is an example comment`.\n\n::: {#fig-comments layout-ncol=\"2\"}\n![](../images/uncommented_code_meme_2.png){#fig-cat-comment}\n\n![](../images/uncommented_code_meme_1.png){#fig-wizard-comment}\n\nLeft: Leaving comments can feel silly in the moment [(Reddit source)](https://www.reddit.com/r/ProgrammerHumor/comments/8w54mx/code_comments_be_like/). Right: But your future self and others will thank you [(quickmeme source)](http://www.quickmeme.com/meme/3r25zh).\n:::\n\n#### Styling Guides {.unnumbered}\n\nAll of this emphasis on communication is not specific to this class, it is a general expectation. Further, the code structure we'll use this semester reflects *common* practice, but not the *only* practice. Various companies / entities have their own R \"style guides\". Below are two examples of such styling guides.\n\n-   [tidyverse style guide](https://style.tidyverse.org/)\n    -   R developers like using the snake_case when naming variables\n-   [Google’s R Style Guide](https://google.github.io/styleguide/Rguide.html)\n    -   Google on the other hand recommends using the camelCase when naming variables\n\n## Homework 1\n\n\n::: {.callout-important title=\"Instructions, Reminder\"}\n-   The following exercises will be due as homework 1.\n-   You should work on these exercises in groups, but write up your own work.\n:::\n\n### Getting Started {.unnumbered}\n\nFor most homeworks and in-class activities, you will be provided with a Quarto (.qmd) template. However, it's also important to practice starting your *own* Quarto .qmd from scratch. You'll do that here.\n\n::: {.callout-important title=\"Instructions\"}\nBefore starting the exercises, take the following steps:\n\n-   Follow the instructions on [Appendix: Submitting Homeworks](99-appendix3.qmd) to create your homework repository\n\n-   In the **homeworks** folder of your cloned repository, create a new Quarto (.qmd) file: File window in the lower-right corner --\\> Add New File (second icon from the left) --\\> Quarto Doc... --\\> name it `homework_01.qmd`\n\n-   Edit the`_quarto.yml` file to include the document\n\n-   In the newly created document, add the following YAML header at the top. The YAML option `number-sections` will prevent numbering the headers of the documents.\n\n    ``` yaml\n    ---\n    title: \"Homework 1\"\n    number-sections: false\n    ---\n    ```\n\n-   Below the yaml header, add section headers for each homework exercise as follows:\n\n    ``` markdown\n    ## Exercise 1: Warming up\n\n\n    ## Exercise 2: Import tidy data\n\n\n    ## Exercise 3: Tidy data properties\n\n\n    ## Exercise 4: Get to know the data\n\n\n    ## Exercise 5: Data structure\n\n\n    ## Exercise 6: Your turn\n\n\n    ## Exercise 7: Brainstorm\n    ```\n\n-   Render the book to html by clicking **Render Book** button in the **Build** located in the upper-right section.\n\n-   Put your answers to each exercise under the appropriate `# Exercise` section. **You do not need to write out the question/prompt itself.**\n:::\n\n### Exercise 1: Warming Up {.unnumbered}\n\n-   Write 1 sentence about one of your favorite foods at Cafe Mac. Make sure to include an *italicized* word and a **bold** word.\n-   Show a .png image of the food from the web. In Google, you can add `filetype:png` to the beginning of your search term, click on the photo you want, and copy the image address.\n\n::: {.callout-warning title=\"Check → Commit → Push\"}\nBefore continuing, click **Render Book** again and make sure it looks like what you want. If happy, jump to GitHub Desktop and commit the changes with the message **Finish HW1 Ex1** and push to GitHub.\n:::\n\n### Exercise 2: Import Tidy Data {.unnumbered}\n\nA quick survey was filled before class. So, let's work with this data. The first step to working with data in RStudio is getting it in there which depends on:\n\n-   file format, eg, `.xls` (Excel spreadsheet), `.csv`, or `.txt`\n-   storage locations, eg, online, on your desktop, or built into RStudio itself.\n\nOur data is stored as a **.csv** file **online**. Within a new R chunk, import and store this data as `survey`. Take note of the function name and the argument it takes.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import the data\nsurvey <- read.csv(\"https://mac-stat.github.io/data/112_fall_2024_survey.csv\")\n```\n:::\n\n\n\n\nNote that nothing new appears in your document after you import the data. This is because we *stored*, but didn't print, the data. Actually, we don't *want* to print the data in our .qmd file--it would be too messy.\n\nThere are 2 quick ways to check out the entire data table to get a sense of its structure and contents:\n\n1.  Type `View(survey)` in the **console**.\n2.  In the Environment tab (upper right pane), click on `survey`.\n\n::: {.callout-warning title=\"Check → Commit → Push\"}\nBefore continuing, click **Render Book** again and make sure it looks like what you want. If happy, jump to GitHub Desktop and commit the changes with the message **Finish HW1 Ex2** and push to GitHub.\n:::\n\n### Exercise 3: Tidy Data Properties {.unnumbered}\n\nAnswers the following prompts in a bulleted list in the order they're presented.\n\n-   What are the units of observation, ie, what does each row represent?\n-   Name one *quantitative* variable, ie, column, in the dataset.\n-   Name one *categorical* variable, ie, column, in the dataset.\n\n::: {.callout-tip title=\"Creating Bulleted List\"}\nTo create a bulleted list, use `-` in front of each item and make sure to leave an empty line before the list.\n:::\n\n::: {.callout-warning title=\"Check → Commit → Push\"}\nBefore continuing, click **Render Book** again and make sure it looks like what you want. If happy, jump to GitHub Desktop and commit the changes with the message **Finish HW1 Ex3** and push to GitHub.\n:::\n\n### Exercise 4: Know the Data {.unnumbered}\n\nBefore we can learn anything from our data, we must understand its structure. For each function below, try out *one at a time* then write a *short* comment/note about what the function does in the indicated places. To make for easier recall later, try to connect your comment on what the function *does* to how it's *named*.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Replace this with a comment on what dim() does\ndim(survey)\n\n# Replace this with a comment on what nrow() does\nnrow(survey)\n\n# Replace this with a comment on what head() does\nhead(survey)\n\n# Replace this with a comment on what head(___, 3) does\nhead(survey, 3)\n\n# Replace this with a comment on what tail() does\ntail(survey)\n\n# Replace this with a comment on what names() does\nnames(survey)\n```\n:::\n\n\n\n\n::: {.callout-warning title=\"Check → Commit → Push\"}\nBefore continuing, click **Render Book** again and make sure it looks like what you want. If happy, jump to GitHub Desktop and commit the changes with the message **Finish HW1 Ex4** and push to GitHub.\n:::\n\n### Exercise 5: Data Structure {.unnumbered}\n\nIt's important that we understand the different types or structures of the **objects** we store. Having such information will inform what types of analyses are appropriate and the appropriate R code for these analyses. The `class()` function is important here. The example below shows how it can be used and what output it produces.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 3\nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\ny <- \"pizza\"\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n\n\n\nThere are various object classes, including:\n\n-   `num` or `numeric`\n-   `int` or `integer`\n-   `chr` or `character`\n-   `factor`, and\n-   `data.frame`.\n\nComplete the chunk below to explore the classes/structure of our `survey` data and the variables within the `survey` data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Obtain the overall class of the survey object\n\n\n# Examine the structure of each variable within survey (including class)\n# Just take note of what information we gain here (no need to write more)\nstr(survey)\n```\n:::\n\n\n\n\n::: {.callout-warning title=\"Check → Commit → Push\"}\nBefore continuing, click **Render Book** again and make sure it looks like what you want. If happy, jump to GitHub Desktop and commit the changes with the message **Finish HW1 Ex5** and push to GitHub.\n:::\n\n### Exercise 6: Your turn {.unnumbered}\n\nLet's practice these same ideas using data on World Cup football/soccer found on:\n\n`https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv`\n\nData is only useful if we know what it's measuring! You can find a **codebook**, i.e. document that describes the data, [here](https://github.com/rfordatascience/tidytuesday/tree/master/data/2022/2022-11-29). Address each prompt below using R functions. Include both the `#` prompt and your code in the chunk.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import and name the dataset (you pick a name!)\n\n\n# Print the first 6 rows of the dataset\n\n\n# How many years of data do we have? And how many measurements do we have on each year?\n\n\n# Get a list of all variable names in the dataset\n\n\n# Display the class and other information for each variable in the dataset\n```\n:::\n\n\n\n\n::: {.callout-warning title=\"Check → Commit → Push\"}\nBefore continuing, click **Render Book** again and make sure it looks like what you want. If happy, jump to GitHub Desktop and commit the changes with the message **Finish HW1 Ex6** and push to GitHub.\n:::\n\n### Exercise 7: Brainstorm {.unnumbered}\n\nWe've just scratched the surface. In a bulleted list (`-`), write out 3 questions about the World Cup that we might answer using these data. Be creative. The questions don't have to be questions we've learned how to answer yet.\n\n::: {.callout-warning title=\"Check → Commit → Push\"}\nBefore continuing, click **Render Book** again and make sure it looks like what you want. If happy, jump to GitHub Desktop and commit the changes with the message **Finish HW1 Ex7** and push to GitHub.\n:::\n\n::: {.callout-warning title=\"Check GitHub\"}\nGo to your repository on GitHub (GitHub Desktop → Repository menu item → View on GitHub) and make sure that all your commits are there.\n:::\n\nCongratulation 🎉. You're done with Homework 1.\n\n### Optional: More Challenges {.unnumbered}\n\nIf you like to do more, here are some things to think about--this will be different from student to student based on current R experience, post-graduate goals, interests, etc.\n\nIf you are thinking about **communication** including aesthetics:\n\n-   Check out other features of Quarto, shown in the Quarto Start up Guide linked at the top of this chapter\n-   Check out the different [themes](https://quarto.org/docs/output-formats/html-themes.html) or ways you might style a Quarto document.\n-   Check out this gallery of [Quarto websites (and other documents)](https://quarto.org/docs/gallery/) and learn how to [build Quarto websites](https://quarto.org/docs/websites/) right from RStudio.\n\nIf you are thinking about **data**, there are many places where you can get some. Actually, the World Cup data came from a weekly social data project called TidyTuesday. TidyTuesday is a community of R users from around the globe who share and dig into one different dataset per week then share their results in various channels such as YouTube and social media. Check out the repository of the TidyTuesday datasets at <https://github.com/rfordatascience/tidytuesday>. In the DataSets section, click on the year and then scroll down to a table of datasets posted that year. Pick a dataset of interest, import this into R, and play around! Be creative.\n",
    "supporting": [
      "Exercise_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}